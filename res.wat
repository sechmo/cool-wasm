(module
(import "cool" "abortTag" (tag $abortTag (param i32)))
(rec
(type $Object.abort.signature (func (param (ref $Object)) (result (ref $Object))))
(type $Object.type_name.signature (func (param (ref $Object)) (result (ref $String))))
(type $Object.copy.signature (func (param (ref $Object)) (result (ref $Object))))
(type $Object#vtable (sub (struct (field $abort (ref $Object.abort.signature)) (field $type_name (ref $Object.type_name.signature)) (field $copy (ref $Object.copy.signature)))))
(type $Object (sub (struct (field $vt (ref $Object#vtable)))))
(type $IO.out_string.signature (func (param (ref $IO)) (param $arg (ref $String)) (result (ref $IO))))
(type $IO.out_int.signature (func (param (ref $IO)) (param $arg (ref $Int)) (result (ref $IO))))
(type $IO.in_string.signature (func (param (ref $IO)) (result (ref $String))))
(type $IO.in_int.signature (func (param (ref $IO)) (result (ref $Int))))
(type $IO#vtable (sub $Object#vtable (struct
(field $abort (ref $Object.abort.signature))
(field $type_name (ref $Object.type_name.signature))
(field $copy (ref $Object.copy.signature))
(field $out_string (ref $IO.out_string.signature))
(field $out_int (ref $IO.out_int.signature))
(field $in_string (ref $IO.in_string.signature))
(field $in_int (ref $IO.in_int.signature)))))
(type $IO (sub $Object (struct (field $vt (ref $IO#vtable)))))
(type $Int#vtable (sub $Object#vtable (struct (field $abort (ref $Object.abort.signature)) (field $type_name (ref $Object.type_name.signature)) (field $copy (ref $Object.copy.signature)))))
(type $Int (sub $Object (struct (field $vt (ref $Int#vtable)) (field $_val i32))))
(type $Bool#vtable (sub $Object#vtable (struct (field $abort (ref $Object.abort.signature)) (field $type_name (ref $Object.type_name.signature)) (field $copy (ref $Object.copy.signature)))))
(type $Bool (sub $Object (struct (field $vt (ref $Bool#vtable)) (field $_val i32))))
(type $String.length.signature (func (param (ref $String)) (result (ref $Int))))
(type $String.concat.signature (func (param (ref $String)) (param $arg (ref $String)) (result (ref $String))))
(type $String.substr.signature (func
(param (ref $String))
(param $arg (ref $Int))
(param $arg2 (ref $Int))
(result (ref $String))))
(type $String#vtable (sub $Object#vtable (struct
(field $abort (ref $Object.abort.signature))
(field $type_name (ref $Object.type_name.signature))
(field $copy (ref $Object.copy.signature))
(field $length (ref $String.length.signature))
(field $concat (ref $String.concat.signature))
(field $substr (ref $String.substr.signature)))))
(type $charsArr (array (mut i8)))
(type $String (sub $Object (struct (field $vt (ref $String#vtable)) (field $chars (ref $charsArr)))))
(type $Main.main.signature (func (param (ref $Main)) (result (ref $Int))))
(type $Main#vtable (sub $Object#vtable (struct
(field $abort (ref $Object.abort.signature))
(field $type_name (ref $Object.type_name.signature))
(field $copy (ref $Object.copy.signature))
(field $main (ref $Main.main.signature)))))
(type $Main (sub $Object (struct (field $vt (ref $Main#vtable))))))
(func
$Object.abort.generic
(param $v (ref $Object))
(result (ref $Object))
(local.get $v)
(local.get $v)
(struct.get $Object $vt)
(struct.get $Object#vtable $abort)
(call_ref $Object.abort.signature))
(func
$Object.type_name.generic
(param $v (ref $Object))
(result (ref $String))
(local.get $v)
(local.get $v)
(struct.get $Object $vt)
(struct.get $Object#vtable $type_name)
(call_ref $Object.type_name.signature))
(func
$Object.copy.generic
(param $v (ref $Object))
(result (ref $Object))
(local.get $v)
(local.get $v)
(struct.get $Object $vt)
(struct.get $Object#vtable $copy)
(call_ref $Object.copy.signature))
(global
$Object.vtable.canon
(ref $Object#vtable)
(ref.func $Object.abort.implementation)
(ref.func $Object.type_name.implementation)
(ref.func $Object.copy.implementation)
(struct.new $Object#vtable))
(func
$Object.copy.implementation
(type $Object.copy.signature)
(param $o (ref $Object))
(result (ref $Object))
(local $c (ref $Object))
(local.get $o)
(ref.cast (ref $Object))
(local.set $c)
(local.get $c)
(struct.get $Object $vt)
(struct.new $Object))
(func
$IO.out_string.generic
(param $v (ref $IO))
(param $arg (ref $String))
(result (ref $IO))
(local.get $v)
(local.get $arg)
(local.get $v)
(struct.get $IO $vt)
(struct.get $IO#vtable $out_string)
(call_ref $IO.out_string.signature))
(func
$IO.out_int.generic
(param $v (ref $IO))
(param $arg (ref $Int))
(result (ref $IO))
(local.get $v)
(local.get $arg)
(local.get $v)
(struct.get $IO $vt)
(struct.get $IO#vtable $out_int)
(call_ref $IO.out_int.signature))
(func
$IO.in_string.generic
(param $v (ref $IO))
(result (ref $String))
(local.get $v)
(local.get $v)
(struct.get $IO $vt)
(struct.get $IO#vtable $in_string)
(call_ref $IO.in_string.signature))
(func
$IO.in_int.generic
(param $v (ref $IO))
(result (ref $Int))
(local.get $v)
(local.get $v)
(struct.get $IO $vt)
(struct.get $IO#vtable $in_int)
(call_ref $IO.in_int.signature))
(global
$IO.vtable.canon
(ref $IO#vtable)
(ref.func $Object.abort.implementation)
(ref.func $Object.type_name.implementation)
(ref.func $Object.copy.implementation)
(ref.func $IO.out_string.implementation)
(ref.func $IO.out_int.implementation)
(ref.func $IO.in_string.implementation)
(ref.func $IO.in_int.implementation)
(struct.new $IO#vtable))
(func
$IO.copy.implementation
(type $Object.copy.signature)
(param $o (ref $Object))
(result (ref $Object))
(local $c (ref $IO))
(local.get $o)
(ref.cast (ref $IO))
(local.set $c)
(local.get $c)
(struct.get $IO $vt)
(struct.new $IO))
(global
$Int.vtable.canon
(ref $Int#vtable)
(ref.func $Object.abort.implementation)
(ref.func $Object.type_name.implementation)
(ref.func $Object.copy.implementation)
(struct.new $Int#vtable))
(func
$Int.copy.implementation
(type $Object.copy.signature)
(param $o (ref $Object))
(result (ref $Object))
(local $c (ref $Int))
(local.get $o)
(ref.cast (ref $Int))
(local.set $c)
(local.get $c)
(struct.get $Int $vt)
(local.get $c)
(struct.get $Int $_val)
(struct.new $Int))
(global
$Bool.vtable.canon
(ref $Bool#vtable)
(ref.func $Object.abort.implementation)
(ref.func $Object.type_name.implementation)
(ref.func $Object.copy.implementation)
(struct.new $Bool#vtable))
(func
$Bool.copy.implementation
(type $Object.copy.signature)
(param $o (ref $Object))
(result (ref $Object))
(local $c (ref $Bool))
(local.get $o)
(ref.cast (ref $Bool))
(local.set $c)
(local.get $c)
(struct.get $Bool $vt)
(local.get $c)
(struct.get $Bool $_val)
(struct.new $Bool))
(func
$String.length.generic
(param $v (ref $String))
(result (ref $Int))
(local.get $v)
(local.get $v)
(struct.get $String $vt)
(struct.get $String#vtable $length)
(call_ref $String.length.signature))
(func
$String.concat.generic
(param $v (ref $String))
(param $arg (ref $String))
(result (ref $String))
(local.get $v)
(local.get $arg)
(local.get $v)
(struct.get $String $vt)
(struct.get $String#vtable $concat)
(call_ref $String.concat.signature))
(func
$String.substr.generic
(param $v (ref $String))
(param $arg (ref $Int))
(param $arg2 (ref $Int))
(result (ref $String))
(local.get $v)
(local.get $arg)
(local.get $arg2)
(local.get $v)
(struct.get $String $vt)
(struct.get $String#vtable $substr)
(call_ref $String.substr.signature))
(global
$String.vtable.canon
(ref $String#vtable)
(ref.func $Object.abort.implementation)
(ref.func $Object.type_name.implementation)
(ref.func $Object.copy.implementation)
(ref.func $String.length.implementation)
(ref.func $String.concat.implementation)
(ref.func $String.substr.implementation)
(struct.new $String#vtable))
(func
$String.copy.implementation
(type $Object.copy.signature)
(param $o (ref $Object))
(result (ref $Object))
(local $c (ref $String))
(local.get $o)
(ref.cast (ref $String))
(local.set $c)
(local.get $c)
(struct.get $String $vt)
(local.get $c)
(struct.get $String $chars)
(struct.new $String))
(func
$Main.main.generic
(param $v (ref $Main))
(result (ref $Int))
(local.get $v)
(local.get $v)
(struct.get $Main $vt)
(struct.get $Main#vtable $main)
(call_ref $Main.main.signature))
(global
$Main.vtable.canon
(ref $Main#vtable)
(ref.func $Object.abort.implementation)
(ref.func $Object.type_name.implementation)
(ref.func $Object.copy.implementation)
(ref.func $Main.main.implementation)
(struct.new $Main#vtable))
(func
$Main.copy.implementation
(type $Object.copy.signature)
(param $o (ref $Object))
(result (ref $Object))
(local $c (ref $Main))
(local.get $o)
(ref.cast (ref $Main))
(local.set $c)
(local.get $c)
(struct.get $Main $vt)
(struct.new $Main))
(func
$Object.abort.implementation
(type $Object.abort.signature)
(param $o (ref $Object))
(result (ref $Object))
(i32.const -1)
(throw $abortTag))
(func
String.length.implementation
(type $String.length.signature)
(param $s (ref $String))
(result (ref $Int))
(local.get $s)
(struct.get $String $chars)
(array.len)
(struct.new $Int))
(func
$String.substr.implementation
(type $String.substr.signature)
(param $s (ref $String))
(param $aInt (ref $Int))
(param $bInt (ref $Int))
(result (ref $String))
(local $diff i32)
(local $res (ref $charsArr))
(local.get $bInt)
(struct.get $Int $_val)
(local.get $aInt)
(struct.get $Int $_val)
(i32.sub)
(i32.const 1)
(i32.add)
(local.tee $diff)
(i32.const 0)
(i32.lt_s)
(if (then (i32.const 0) (local.set $diff)))
(local.get $diff)
(array.new_default $charsArr)
(local.tee $res)
(i32.const 0)
(local.get s)
(struct.get $String $chars)
(local.get $aInt)
(struct.get $Int $_val)
(get.local $diff)
(array.copy $charsArr $charsArr)
(global.get $String.static.vt)
(local.get $res)
(struct.new $String))
(func
$String.concat.implementation
(type $String.concat.signature)
(param $s0 (ref $String))
(param $s1 (ref $String))
(result (ref $String))
(unreachable))
(func
$IO.out_string.implementation
(type $IO.out_string.signature)
(param (ref $IO))
(param $arg (ref $String))
(result (ref $IO))
(unreachable))
(func
$IO.out_int.implementation
(type $IO.out_string.signature)
(param (ref $IO))
(param $arg (ref $Int))
(result (ref $IO))
(unreachable))
(func
$IO.in_string.implementation
(type $IO.in_string.signature)
(param (ref $IO))
(result (ref $String))
(unreachable))
(func
$IO.in_int.implementation
(type $IO.in_int.signature)
(param (ref $IO))
(result (ref $Int))
(unreachable))
(func
$Main.main.implementation
(type $Main.main.signature)
(param $self (ref $Main))
(result (ref $Int))
(unreachable)))
